# -*- coding: utf-8 -*-
"""DecisionTree_preprunning.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1fZJAZtxx-naCgklueTYTyr4fEoZKhxOY
"""

# Commented out IPython magic to ensure Python compatibility.
import numpy as np
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
# %matplotlib inline

from sklearn.datasets import load_iris
iris = load_iris()
df = pd.DataFrame(data = iris.data , columns = iris.feature_names)
print(df)

X = df.iloc[:,:]
y = pd.DataFrame(iris.target, columns=["Setosa/Versicolour/Virginica"])
print(X)
print(2*"\n")
print(y)

from sklearn.model_selection import train_test_split
X_train ,X_test , y_train , y_test = train_test_split(X,y ,test_size=.2,random_state=10)

X_train

X_test

y_train

y_test

from sklearn.tree import DecisionTreeClassifier
from sklearn import tree

params = {"criterion":['gini', 'entropy', 'log_loss'],
          'splitter':['best', 'random'],
          'max_depth':[1,2,3,4,5,6,7],
          'max_features':['auto','sqrt', 'log2']
          }
print(params)

model = DecisionTreeClassifier()
model.fit(X_train,y_train)

from sklearn.model_selection import GridSearchCV
grid = GridSearchCV(model , param_grid = params , cv =5,scoring='accuracy')
grid.fit(X_train,y_train)

grid.best_params_

grid.best_score_

plt.figure(figsize=(15,10))
print(tree.plot_tree(model ,filled =True))

y_pred = grid.predict(X_test)
print(y_pred)

sfrom sklearn.metrics import confusion_matrix,accuracy_score,classification_report, recall_score , f1_score ,precision_score
print("Accuracy_score:",accuracy_score(y_test,y_pred))
print("2*\n")
print("Classification_Report:",classification_report(y_test,y_pred))
print("2*\n")
print("confusion_matrix:\n",confusion_matrix(y_test,y_pred))
print("2*\n")